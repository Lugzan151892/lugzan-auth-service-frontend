import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { NextIntlClientProvider } from 'next-intl';

async function getMessages(locale: string) {
  try {
    console.log(locale);

    return (await import(`../locales/${locale}/common.json`)).default;
  } catch (error) {
    console.error(`Failed to load messages for locale "${locale}"`, error);
    return {};
  }
}

function detectLocale(): string {
  if (typeof window === 'undefined') return 'en'; // Default on server-side
  const browserLocale = navigator.language || navigator.languages?.[0] || 'en';
  return browserLocale.split('-')[0]; // Возвращаем только язык, например, "ru"
}

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const locale = detectLocale();
  const messages = await getMessages(locale);

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <NextIntlClientProvider locale={locale} messages={messages}>
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
